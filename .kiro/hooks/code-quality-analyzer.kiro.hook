{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.js",
      "**/*.ts",
      "**/*.jsx",
      "**/*.tsx",
      "**/*.py",
      "**/*.java",
      "**/*.cpp",
      "**/*.c",
      "**/*.cs",
      "**/*.go",
      "**/*.rs",
      "**/*.php",
      "**/*.rb",
      "**/*.swift",
      "**/*.kt"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. Code smells and anti-patterns\n2. Opportunities to apply better design patterns\n3. Best practices for the specific programming language\n4. Readability improvements (variable naming, function structure, comments)\n5. Maintainability enhancements (modularity, separation of concerns)\n6. Performance optimizations (algorithmic efficiency, memory usage)\n\nFor each suggestion, provide:\n- The specific issue or improvement opportunity\n- Why it matters for code quality\n- A concrete example of how to implement the improvement\n- The expected benefit (readability, performance, maintainability)\n\nEnsure all suggestions maintain the existing functionality while improving the code quality."
  }
}